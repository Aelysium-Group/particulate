/*package net.noknt.showcontrol.sequencer;

import net.noknt.showcontrol.ShowControl;
import net.noknt.showcontrol.renderEngine.Effect;
import org.bukkit.Bukkit;
import org.bukkit.Location;
import org.bukkit.scheduler.BukkitRunnable;

import java.util.LinkedHashMap;
import java.util.Map;

public class TimelineManager extends BukkitRunnable {
    Effect effect;
    String effectId;
    String emitterWorld;
    String emitterX;
    String emitterY;
    String emitterZ;
    String emitterKey;
    String emitterRegex = "(emitters\\.[0-9]*)\\.link-id";
    Location location;
    private Map<String,Object> frameHolder = new LinkedHashMap<>();

    @Override
    public void run() {
        if (!ShowControl.getInstance().getLinkStatus().isEmpty()) {
            for (Map.Entry<Integer, Integer> linkStatusLoopMap : ShowControl.getInstance().getLinkStatus().entrySet()) { // Loop through all of the current linkStatus items
                if (ShowControl.getInstance().getMap("emitters").containsValue(linkStatusLoopMap.getKey())) { // Check for emitters with a matching id
                    for (Map.Entry<String, Object> emittersLoopMap : ShowControl.getInstance().getMap("emitters").entrySet()) {
                        if (emittersLoopMap.getKey().matches("emitters\\.[0-9]*\\.link-id")) { // Only continue if the current emitter entry is a link-id entry
                            if (emittersLoopMap.getValue().equals(linkStatusLoopMap.getKey())) { // Check if this id entry matches the current loop
                                emitterKey = emittersLoopMap.getKey();

                                effectId = String.valueOf(ShowControl.getInstance().getMap("emitters").get(emitterKey.replaceAll(emitterRegex, "$1.effect-id")));
                                emitterWorld = String.valueOf(ShowControl.getInstance().getMap("emitters").get(emitterKey.replaceAll(emitterRegex, "$1.loc.w")));
                                emitterX = String.valueOf(ShowControl.getInstance().getMap("emitters").get(emitterKey.replaceAll(emitterRegex, "$1.loc.x")));
                                emitterY = String.valueOf(ShowControl.getInstance().getMap("emitters").get(emitterKey.replaceAll(emitterRegex, "$1.loc.y")));
                                emitterZ = String.valueOf(ShowControl.getInstance().getMap("emitters").get(emitterKey.replaceAll(emitterRegex, "$1.loc.z")));
                                // Construct the emitter's location
                                location = new Location(Bukkit.getWorld(emitterWorld), Double.parseDouble(emitterX), Double.parseDouble(emitterY), Double.parseDouble(emitterZ));

                                if(!ShowControl.getInstance().getMap("emitters").containsKey(emitterKey.replaceAll(emitterRegex, "$1.animation"))) {

                                    try {
                                        Effect.getInstance().run(Effect.builder().location(location).unwrap(effectId).build());
                                    } catch (Throwable e) {
                                        e.printStackTrace();
                                        ShowControl.getInstance().getLinkStatus().remove(linkStatusLoopMap.getKey());
                                        ShowControl.getInstance().log("There's been an error rendering your effect! Deactivating this effect-link...");
                                        ShowControl.getInstance().log("This error was generated by a data miss-match! Check your config files and make sure they're configured correctly!");
                                    }
                                } else {
                                    if(linkStatusLoopMap.getValue() == 1) {
                                    } else if(linkStatusLoopMap.getValue() == 0) {
                                        Animation.
                                    }

                                }
                            }
                        }
                    }
                    if (linkStatusLoopMap.getValue() == -1) {
                        ShowControl.getInstance().getLinkStatus().remove(linkStatusLoopMap.getKey());
                    }
                }
            }
        }
    }
}
*/