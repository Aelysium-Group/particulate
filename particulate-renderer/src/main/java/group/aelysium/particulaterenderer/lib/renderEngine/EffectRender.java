package group.aelysium.particulaterenderer.lib.renderEngine;

import group.aelysium.particulaterenderer.ParticulateRenderer;
import group.aelysium.particulaterenderer.lib.effects.Effect;
import org.bukkit.*;
import org.bukkit.scheduler.BukkitRunnable;

import java.util.Map;

public class EffectRender extends BukkitRunnable {
    Effect effect;
    String effectId;
    String emitterWorld;
    String emitterX;
    String emitterY;
    String emitterZ;
    String emitterKey;
    String emitterRegex = "(emitters\\.[0-9]*)\\.link-id";
    Location location;


    @Override
    public void run() {
        //if (!ShowControl.getInstance().getLinkStatus().isEmpty()) {
            for (Map.Entry<Integer, Integer> linkStatusLoopMap : ParticulateRenderer.getInstance().getLinkStatus().entrySet()) { // Loop through all of the current linkStatus items

                if (linkStatusLoopMap.getValue() == 0) {
                    ParticulateRenderer.getInstance().getLinkStatus().remove(linkStatusLoopMap.getKey());
                    continue;
                }
                if (ParticulateRenderer.getInstance().getMap("emitters").containsValue(linkStatusLoopMap.getKey())) { // Check for emitters with a matching id
                    for (Map.Entry<String, Object> emittersLoopMap : ParticulateRenderer.getInstance().getMap("emitters").entrySet()) {
                        if (emittersLoopMap.getKey().matches("emitters\\.[0-9]*\\.link-id")) { // Only continue if the current emitter entry is a link-id entry
                            if (emittersLoopMap.getValue().equals(linkStatusLoopMap.getKey())) { // Check if this id entry matches the current loop
                                // If it does, get the other information about this emitter.
                                emitterKey = emittersLoopMap.getKey();

                                effectId = String.valueOf(ParticulateRenderer.getInstance().getMap("emitters").get(emitterKey.replaceAll(emitterRegex, "$1.effect-id")));
                                emitterWorld = String.valueOf(ParticulateRenderer.getInstance().getMap("emitters").get(emitterKey.replaceAll(emitterRegex, "$1.loc.world")));
                                emitterX = String.valueOf(ParticulateRenderer.getInstance().getMap("emitters").get(emitterKey.replaceAll(emitterRegex, "$1.loc.x")));
                                emitterY = String.valueOf(ParticulateRenderer.getInstance().getMap("emitters").get(emitterKey.replaceAll(emitterRegex, "$1.loc.y")));
                                emitterZ = String.valueOf(ParticulateRenderer.getInstance().getMap("emitters").get(emitterKey.replaceAll(emitterRegex, "$1.loc.z")));

                                // Construct the emitter's location
                                location = new Location(Bukkit.getWorld(emitterWorld), Double.parseDouble(emitterX), Double.parseDouble(emitterY), Double.parseDouble(emitterZ));

                                /**
                                 * Different values result in different behaviors.
                                 * 0 = Deactivates the effect and runs stop()
                                 * 1 = Runs the effect until set to 0
                                 * -1 = Runs the effect once and then stops it
                                 */
                                try {
                                    if (linkStatusLoopMap.getValue() == -1) {
                                        ParticulateRenderer.getInstance().getLinkStatus().remove(linkStatusLoopMap.getKey());
                                        Effect effect = Effect.builder().location(location).unwrap(effectId).build();
                                        Effect.getInstance().run(effect,effectId);
                                        Effect.getInstance().stop(effect);
                                    } else {
                                        Effect.getInstance().run(Effect.builder().location(location).unwrap(effectId).build(),effectId);
                                    }
                                } catch (Throwable e) {
                                    e.printStackTrace();
                                    ParticulateRenderer.getInstance().getLinkStatus().remove(linkStatusLoopMap.getKey());
                                    ParticulateRenderer.getInstance().log("There's been an error rendering your effect! Deactivating this effect-link...");
                                    ParticulateRenderer.getInstance().log("This error was generated by a data miss-match! Check your config files and make sure they're configured correctly!");
                                }
                            }
                        }
                    }
                }
            }
        //}
    }
}
